@* 
    File: _HomeLayout.cshtml
    Author: Nihar Shah
    Date: November 7th, 2023
*@

@using WebApp.APIs.GoogleTranslate
@using WebApp.APIs.AzureMaps
@using WebApp.Models.AzureMaps.Weather
@using WebApp.Data
@using WebApp.Models.UnitOfWork
@using System.Security.Claims

@{
    var translator = new GoogleTranslate();
}

<!--
    Purpose: The _HomeLayout.cshtml file, authored by Nihar Shah, serves as the layout template for various pages within the application. 
    This layout defines the HTML structure and common elements shared across multiple views. The file starts by setting the language 
    attribute based on the preferred language retrieved using the GoogleTranslate API. It includes metadata, title configuration, 
    and links to CSS and JavaScript files, enhancing the visual and functional aspects of the application.
    Within the body section, the layout contains a header with a navigation bar that facilitates user interaction. 
    The navigation bar displays the application logo, offers quick access links based on user roles (e.g., Manager, Cashier, Customer), 
    and enables user authentication options (Log in/Log out). Additionally, the layout incorporates weather-related information 
    fetched using Azure Maps API, displaying the current temperature and weather condition as an icon.
    This layout utilizes Bootstrap for responsive design and interactivity, allowing seamless navigation and a visually appealing interface. 
    The file includes references to jQuery and Bootstrap JavaScript files for enhanced functionality and styling. 
    Views that implement this layout benefit from its consistent structure and elements, providing a cohesive user experience across the application.
-->

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-wi dth, initial-scale=1.0" />
        <title>@ViewData["Title"] - WebApp</title>
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
        <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
        <link rel="stylesheet" href="~/WebApp.styles.css" asp-append-version="true" />
        <link rel="stylesheet" href="~/css/home.css" asp-append-version="true" />
        <script src="~/js/geolocation.js" asp-append-version="true"></script>
    </head>
    @{
        bool grayscale = Context.Request.Cookies["Grayscale"] == "true";
        bool invert = Context.Request.Cookies["Invert"] == "true";
    }
    <body class="@(grayscale ? "contrast-grayscale" : "") @(invert ? "contrast-invert" : "")">
        <header>
            <nav class="contrast navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
                <div class="container-fluid">
                    <!--Logo-->
                    <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index" asp-route-autoRedirect="false">
                        <img 
                            src="https://gong-cha-usa.com/wp-content/uploads/Gong-cha-horizontal-logo-word-mark-400x81.png" 
                            alt="Gong Cha"
                            height="35"
                        />
                    </a>
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                            aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                        <ul class="navbar-nav flex-grow-1">
                            <!--Used to push other content to right-->
                        </ul>
                        <ul class="navbar-nav flex-grow-1">
                            @{
                                bool isManager = User.IsInRole("Manager");
                                bool isCashier = User.IsInRole("Cashier");
                            }

                            @if (isManager || isCashier)
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark">Quick Access: </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index" asp-route-autoRedirect="false">Home</a>
                                </li>
                                if (isManager) {
                                    <li class="nav-item">
                                        <a class="nav-link text-dark" asp-area="" asp-controller="Manager" asp-action="Index">Manager</a>
                                    </li>
                                }
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Cashier" asp-action="Index">Cashier</a>
                                </li>
                                if (isManager) {
                                    <li class="nav-item">
                                        <a class="nav-link text-dark" asp-area="" asp-controller="Customer" asp-action="Index">Customer</a>
                                    </li>
                                }
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="MenuBoard" asp-action="Index">Menu Board</a>
                                </li>
                            }
                        </ul>
                        <ul class="navbar-nav">
                            <li class="nav-item login">
                                @if (User.Identity!.IsAuthenticated)
                                {
                                    string name = User.Identity.Name ?? "";
                                    string currentUrl = Context.Request.Path;
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@currentUrl">
                                        @name | @await translator.TranslateText("Log out") | 
                                    </a>
                                }
                                else
                                {
                                    string currentUrl = Context.Request.Path;
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Login" asp-route-returnUrl="@currentUrl">
                                        @await translator.TranslateText("Log in") | 
                                    </a>
                                }
                            </li>
                            <li class="nav-item">
                                @{
                                    var weather = new Weather();
                                    CurrentCondition? currentCondition = await weather.GetCurrentCondition();
                                    double? temperature = currentCondition?.Temperature;
                                    string temperatureString = temperature + "Â°F";

                                    int? iconCode = currentCondition?.IconCode;
                                    string path = weather.GetWeatherIconName(iconCode) + ".png";
                                }
                                <img id="weather-icon" src="~/img/WeatherIcons/@path"/>
                                <p id="temperature">@temperatureString</p>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>
        </header>
          
        @await Html.PartialAsync("_AccessibilityPartial")
        @await Html.PartialAsync("_AIPartial")
        @RenderBody()
    </body>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</html>
