@{
    ViewData["Title"] = "Manager Page";
}
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>@ViewData["Title"] - WebApp</title>
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<link rel="stylesheet" href="~/WebApp.styles.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/Manager.css" asp-append-version="true" />
<script src="~/js/manager.js"></script>
<script src="~/js/loading-screen.js"></script>

</head>
<body>
    <div class="container">
        <main role="main" class="pb-3">
            @if (User.Identity!.IsAuthenticated) {
                <div class="text-center">
                    <h1 class="display-4">Welcome, @User.Identity.Name!.Split(" ")[0]!</h1>
                </div>
            }
            @* Will never be unauthenticated *@
            @* else {   
                <div class="text-center">
                    <h1 class="display-4">Welcome!</h1>
                </div>
            } *@

            <!-- Category bar -->
            <div class="text-center" style="display: flex; justify-content: space-around;">
                <button id="ShowManager" class="category-btn active" data-to="item-container">Manager</button>
                <button id="ShowProducts" class="category-btn" data-to="item-container">Products</button>
                <button id="ShowInventory" class="category-btn" data-to="item-container">Inventory</button>
            </div>
        </main>
    </div>
</body>
</html>

@using WebApp.Data
@using WebApp.Models.UnitOfWork
@using WebApp
@model (List<Product>, List<Inventory>, List<Ingredient>)
@if (Model.Item1 != null && Model.Item1.Count > 0) {
    <table id="prod-table" class="table" style="display:none">
        <thead>
            <tr>
                <th>Product ID</th>
                <th>Name</th>
                <th>Price</th>
                <th>Series</th>
                <th>Image Url</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model.Item1) {
                <tr>
                    <td>@product.Id</td>
                    <td contenteditable="true">@product.Name</td>
                    <td contenteditable="true">@product.Price</td>
                    <td contenteditable="true">@product.Series</td>
                    <td contenteditable="true">@product.ImgUrl</td>
                    <td><input type="button" value="Delete" onclick="deleteRow(this)"/></td>
                </tr>
            }
        </tbody>
    </table>
} else {
    <p>No products found.</p>
}
<button id="saveButtonProd" class="save-button" style="display:none">Save</button>
<button id="addButtonProd" class="add-button" style="display:none">Add</button>

@if (Model.Item2 != null && Model.Item2.Count > 0) {
    <table id="inv-table" class="table" style="display:none">
        <thead>
            <tr>
                <th>ID</th>
                <th>Ingredient ID</th>
                <th>Name</th>
                <th>Quantity</th>
                <th>Fill Level</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var inventory in Model.Item2) {
                <tr>
                    <td>@inventory.Id</td>
                    <td>@inventory.IngredientId</td>
                    <td contenteditable="true">
                        @foreach (var ingredient in Model.Item3) {
                            @if(ingredient.Id == inventory.IngredientId) {
                                @ingredient.Name
                            }
                        }</td>
                    <td contenteditable="true"> @inventory.Quantity</td>
                    <td contenteditable="true"> @inventory.FillLevel</td>
                    <td><input type="button" value="Delete" onclick="deleteRow(this)"/></td>
                </tr>
            }
        </tbody>
    </table>
} else {
    <p>No products found.</p>
}
<button id="saveButtonInv" class="save-button" style="display:none">Save</button>
<button id="addButtonInv" class="add-button" style="display:none">Add</button>

<h2 id="saveSuccess" style="display:none">Save Successful</h2>
<h2 id="saveFail" style="display:none">Save Fail</h2>
<h2 id="saveFail2" style="display:none">Invalid Data Type</h2>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script>
    // Product Save Button Function
    document.getElementById('saveButtonProd').addEventListener('click', function() {
        console.log('Save button clicked');
        var editedCells = document.querySelectorAll('td.edited');
        var fail = false;
        var data = [];

        editedCells.forEach(function(cell) {
            if (cell.parentElement.querySelector('td:nth-child(2)').innerText == "") {
                cell.parentElement.querySelector('td:nth-child(2)').innerText = "N/A";
            }
            if (cell.parentElement.querySelector('td:nth-child(3)').innerText == "") {
                cell.parentElement.querySelector('td:nth-child(3)').innerText = "0";
            } 
            if (cell.parentElement.querySelector('td:nth-child(4)').innerText == "") {
                cell.parentElement.querySelector('td:nth-child(4)').innerText = "N/A";
            }
            if (cell.parentElement.querySelector('td:nth-child(5)').innerText == "") {
                cell.parentElement.querySelector('td:nth-child(5)').innerText = "FILLER";
            }

            if (isNaN(parseFloat(cell.parentElement.querySelector('td:nth-child(3)').innerText))) {
                cell.parentElement.querySelector('td:nth-child(3)').innerText = "0";
                fail = true;
            }

            data.push({
                id: cell.parentElement.querySelector('td:first-child').innerText,
                name: cell.parentElement.querySelector('td:nth-child(2)').innerText,
                price: cell.parentElement.querySelector('td:nth-child(3)').innerText,
                series: cell.parentElement.querySelector('td:nth-child(4)').innerText,
                imgurl: cell.parentElement.querySelector('td:nth-child(5)').innerText
            });
        });

        
        /* EXAMPLE
        $.ajax({
            url: "/Customer/AddToCart",
            type: "POST",
            data: { productID: productID, customizationIDs: customizationIDs },
            success: function (data) {
                console.log(data);
            },
            error: function () {
                console.log("Error adding to cart");
            }
        });
        */
        
        $.ajax({
            url: "/Manager/SaveProducts",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(data),
            success: function (response) {
                if (fail == true) {
                    document.getElementById("saveFail2").style.display = 'block';
                    setTimeout(function() {
                        $('#saveFail2').fadeOut('fast');
                    }, 5000);
                }
                else {
                    document.getElementById("saveSuccess").style.display = 'block';
                    setTimeout(function() {
                        $('#saveSuccess').fadeOut('fast');
                    }, 5000);
                }
                console.log(response);
            },
            error: function () {
                document.getElementById("saveFail").style.display = 'block';
                setTimeout(function() {
                    $('#saveFail').fadeOut('fast');
                }, 5000);
                console.log("Error saving products");
            }
        });

        // Reset the edited cells
        editedCells.forEach(function(cell) {
            cell.classList.remove('edited');
        });
    });
    document.getElementById('addButtonProd').addEventListener('click', function() {
        var table = document.getElementById("prod-table");
        console.log('Add product button clicked');
        var row = table.insertRow(-1);
        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);
        var cell4 = row.insertCell(3);
        var cell5 = row.insertCell(4);
        cell2.setAttribute("contenteditable", true);
        cell3.setAttribute("contenteditable", true);
        cell4.setAttribute("contenteditable", true);
        cell5.setAttribute("contenteditable", true);
        var cell6 = row.insertCell(5);
        cell6.innerHTML = '<input type="button" value="Delete" onclick="deleteRow(this)"/>';
        cell2.addEventListener('input', function() {
                console.log('Cell changed');
                cell2.classList.add('edited');
            });
        cell3.addEventListener('input', function() {
                console.log('Cell changed');
                cell3.classList.add('edited');
            });
        cell4.addEventListener('input', function() {
                console.log('Cell changed');
                cell4.classList.add('edited');
            });
        cell5.addEventListener('input', function() {
                console.log('Cell changed');
                cell5.classList.add('edited');
            });
        $.ajax({
            url: "/Manager/AddProduct",
            type: "POST",
            contentType: "application/json",
            success: function (response) {
                cell1.innerHTML = response;
            },
            error: function () {
                console.log("Error saving products");
            }
        });
        
    });

    // Inventory Save Button Function
    document.getElementById('saveButtonInv').addEventListener('click', function() {
        console.log('Save button clicked');
        var editedCells = document.querySelectorAll('td.edited');
        var Data = [];
        var Data2 = [];
        Boolean fail = false;

        function getCellValue(row, index) {
            var cellValue = row.querySelector('td:nth-child(' + index + ')').innerText;
            return cellValue.trim() === "" ? null : cellValue;
        }

        editedCells.forEach(function (cell) {
            if (cell.parentElement.querySelector('td:nth-child(3)').innerText == "") {
                cell.parentElement.querySelector('td:nth-child(3)').innerText = "N/A";
            } 
            if (cell.parentElement.querySelector('td:nth-child(4)').innerText == "") {
                cell.parentElement.querySelector('td:nth-child(4)').innerText = "0";
            }
            if (cell.parentElement.querySelector('td:nth-child(5)').innerText == "") {
                cell.parentElement.querySelector('td:nth-child(5)').innerText = "0";
            }
            if (isNaN(parseInt(cell.parentElement.querySelector('td:nth-child(4)').innerText))) {
                cell.parentElement.querySelector('td:nth-child(4)').innerText = "0";
                fail = true;
            }
            if (isNaN(parseInt(cell.parentElement.querySelector('td:nth-child(5)').innerText))) {
                cell.parentElement.querySelector('td:nth-child(5)').innerText = "0";
                fail = true;
            }
            
            var _id = getCellValue(cell.parentElement, 1) || "0";
            var _ingredientId = getCellValue(cell.parentElement, 2) || "0";
            var _quantity = getCellValue(cell.parentElement, 4) || "0";
            var _fillLevel = getCellValue(cell.parentElement, 5) || "0";
            Data.push({
                Id: parseInt(_id, 10),
                IngredientId: parseInt(_ingredientId, 10),
                Quantity: parseInt(_quantity, 10),
                FillLevel: parseInt(_fillLevel, 10)
            });

            Data2.push({
                Id: parseInt(_ingredientId, 10),
                Name: getCellValue(cell.parentElement, 3) || "N/A"
            });
        });


        // Reset the edited cells
        editedCells.forEach(function(cell) {
            cell.classList.remove('edited');
        });
        console.log(Data);
        console.log(Data2);
        var output = {
            data: JSON.stringify(Data),
            data2: JSON.stringify(Data2)
        };
        $.ajax({
            url: "/Manager/SaveInventory",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(output),
            success: function (data) {
                if (fail) {
                    document.getElementById("saveFail2").style.display = 'block';
                    setTimeout(function() {
                        $('#saveFail2').fadeOut('fast');
                    }, 5000);
                }
                else {
                    document.getElementById("saveSuccess").style.display = 'block';
                    setTimeout(function() {
                        $('#saveSuccess').fadeOut('fast');
                    }, 5000);
                }
                console.log(data);
            },
            error: function () {
                document.getElementById("saveFail").style.display = 'block';
                setTimeout(function() {
                    $('#saveFail').fadeOut('fast');
                }, 5000);
                console.log("Error saving inventory");
            }
        });
    });

    document.getElementById('addButtonInv').addEventListener('click', function() {
        var table = document.getElementById("inv-table");
        console.log('Add Inventory button clicked');
        var row = table.insertRow(-1);
        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);
        var cell4 = row.insertCell(3);
        var cell5 = row.insertCell(4);
        var cell6 = row.insertCell(5);
        cell6.innerHTML = '<input type="button" value="Delete" onclick="deleteRow(this)"/>';
        cell3.setAttribute("contenteditable", true);
        cell4.setAttribute("contenteditable", true);
        cell5.setAttribute("contenteditable", true);
        cell3.addEventListener('input', function() {
                console.log('Cell changed');
                cell3.classList.add('edited');
            });
        cell4.addEventListener('input', function() {
                console.log('Cell changed');
                cell4.classList.add('edited');
            });
        cell5.addEventListener('input', function() {
                console.log('Cell changed');
                cell5.classList.add('edited');
            });
        $.ajax({
            url: "/Manager/AddInventory",
            type: "POST",
            contentType: "application/json",
            success: function (response) {
                cell1.innerHTML = response;
            },
            error: function () {
                console.log("Error saving products");
            }
        });
    });



    var editableCells = document.querySelectorAll('[contenteditable=true]');

    // Check for changes in the editable cells
    editableCells.forEach(function(cell) {
        cell.addEventListener('input', function() {
            console.log('Cell changed');
            cell.classList.add('edited');
        });
    });
    function deleteRow(btn) {
        var row = btn.parentNode.parentNode;
        row.parentNode.removeChild(row);
    }
</script> 