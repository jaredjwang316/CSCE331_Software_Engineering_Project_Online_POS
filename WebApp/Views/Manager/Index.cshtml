@{
    ViewData["Title"] = "Manager Page";
}
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>@ViewData["Title"] - WebApp</title>
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<link rel="stylesheet" href="~/WebApp.styles.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/Manager.css" asp-append-version="true" />
<script src="~/js/manager.js"></script>
<script src="~/js/customer-loading-screen.js"></script>

</head>
<body>
    <div class="container">
        <main role="main" class="pb-3">
            @if (User.Identity!.IsAuthenticated) {
                <div class="text-center">
                    <h1 class="display-4">Welcome, @User.Identity.Name!.Split(" ")[0]!</h1>
                </div>
            }
            else {
                <div class="text-center">
                    <h1 class="display-4">Welcome!</h1>
                </div>
            }

            <!-- Category bar -->
            <div class="text-center" style="display: flex; justify-content: space-around;">
                <button id="ShowManager" class="category-btn active" data-to="item-container">Manager</button>
                <button id="ShowProducts" class="category-btn" data-to="item-container">Products</button>
                <button id="ShowInventory" class="category-btn" data-to="item-container">Inventory</button>
            </div>
        </main>
    </div>
</body>
</html>

@using WebApp.Data
@using WebApp.Models.UnitOfWork
@using WebApp
@model (List<Product>, List<Inventory>, List<Ingredient>)
@if (Model.Item1 != null && Model.Item1.Count > 0) {
    <table id="prod-table" class="table" style="display:none">
        <thead>
            <tr>
                <th>Product ID</th>
                <th>Name</th>
                <th>Price</th>
                <th>Series</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model.Item1) {
                <tr>
                    <td contenteditable="true">@product.Id</td>
                    <td contenteditable="true">@product.Name</td>
                    <td contenteditable="true">@product.Price</td>
                    <td contenteditable="true">@product.Series</td>
                </tr>
            }
        </tbody>
    </table>
} else {
    <p>No products found.</p>
}
<button id="saveButtonProd" class="save-button" style="display:none">Save</button>

@if (Model.Item2 != null && Model.Item2.Count > 0) {
    <table id="inv-table" class="table" style="display:none">
        <thead>
            <tr>
                <th>ID</th>
                <th>Ingredient ID</th>
                <th>Name</th>
                <th>Quantity</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var inventory in Model.Item2) {
                <tr>
                    <td contenteditable="true">@inventory.Id</td>
                    <td contenteditable="true">@inventory.IngredientId</td>
                    <td contenteditable="true">
                        @foreach (var ingredient in Model.Item3) {
                            @if(ingredient.Id == inventory.IngredientId) {
                                @ingredient.Name
                            }
                        }</td>
                    <td contenteditable="true">@inventory.Quantity</td>
                </tr>
            }
        </tbody>
    </table>
} else {
    <p>No products found.</p>
}
<button id="saveButtonInv" class="save-button" style="display:none">Save</button>
<h2 id="saveSuccess" style="display:none">Save Successful</h2>
<h2 id="saveFail" style="display:none">Save Fail</h2>
<h2 id="manager-msg">Future manager landing page</h2>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script>
    // Product Save Button Function
    document.getElementById('saveButtonProd').addEventListener('click', function() {
        console.log('Save button clicked');
        var editedCells = document.querySelectorAll('td.edited');

        var data = [];

        editedCells.forEach(function(cell) {
            data.push({
                id: cell.parentElement.querySelector('td:first-child').innerText,
                name: cell.parentElement.querySelector('td:nth-child(2)').innerText,
                price: cell.parentElement.querySelector('td:nth-child(3)').innerText,
                series: cell.parentElement.querySelector('td:nth-child(4)').innerText
            });
        });

        
        /* EXAMPLE
        $.ajax({
            url: "/Customer/AddToCart",
            type: "POST",
            data: { productID: productID, customizationIDs: customizationIDs },
            success: function (data) {
                console.log(data);
            },
            error: function () {
                console.log("Error adding to cart");
            }
        });
        */
        
        $.ajax({
            url: "/Manager/SaveProducts",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(data),
            success: function (response) {
                document.getElementById("saveSuccess").style.display = 'inline';
                setTimeout(function() {
                    $('#saveSuccess').fadeOut('fast');
                }, 5000);
                console.log(response);
            },
            error: function () {
                document.getElementById("saveFail").style.display = 'inline';
                setTimeout(function() {
                    $('#saveFail').fadeOut('fast');
                }, 5000);
                console.log("Error saving products");
            }
        });

        // Reset the edited cells
        editedCells.forEach(function(cell) {
            cell.classList.remove('edited');
        });
    });
    // Inventory Save Button Function
    document.getElementById('saveButtonInv').addEventListener('click', function() {
        console.log('Save button clicked');
        var editedCells = document.querySelectorAll('td.edited');

        var data = [];

        editedCells.forEach(function(cell) {
            data.push({
                id: cell.parentElement.querySelector('td:first-child').innerText,
                ingredientid: cell.parentElement.querySelector('td:nth-child(2)').innerText,
                quantity: cell.parentElement.querySelector('td:nth-child(4)').innerText,
                filllevel: 100
            });
        });


        // Reset the edited cells
        editedCells.forEach(function(cell) {
            cell.classList.remove('edited');
        });

        $.ajax({
            url: "/Manager/SaveInventory",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(data),
            success: function (response) {
                document.getElementById("saveSuccess").style.display = 'inline';
                setTimeout(function() {
                    $('#saveSuccess').fadeOut('fast');
                }, 5000);
                console.log(response);
            },
            error: function () {
                document.getElementById("saveFail").style.display = 'inline';
                setTimeout(function() {
                    $('#saveFail').fadeOut('fast');
                }, 5000);
                console.log("Error saving inventory");
            }
        });
    });



    var editableCells = document.querySelectorAll('[contenteditable=true]');

    // Check for changes in the editable cells
    editableCells.forEach(function(cell) {
        cell.addEventListener('input', function() {
            console.log('Cell changed');
            cell.classList.add('edited');
        });
    });
</script> 